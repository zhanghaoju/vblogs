(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{571:function(v,e,t){"use strict";t.r(e);var _=t(9),r=Object(_.a)({},(function(){var v=this,e=v.$createElement,t=v._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("blockquote",[t("p",[v._v("前言：在做移动端响应式布局的时候发现这个知识点还是比较薄弱，记录一下")])]),v._v(" "),t("h2",{attrs:{id:"前置知识"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前置知识"}},[v._v("#")]),v._v(" 前置知识")]),v._v(" "),t("h3",{attrs:{id:"px"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#px"}},[v._v("#")]),v._v(" px")]),v._v(" "),t("p",[v._v("绝对单位，表示像素，CSS规范的定义，CSS中的px是一个相对长度，它相对的，是viewing device的分辨率。这个viewing device，通常就是电脑显示器。就好比呈现在我们显示器上的一个个小点，每个像素点都是大小等同的。")]),v._v(" "),t("h3",{attrs:{id:"em"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#em"}},[v._v("#")]),v._v(" em")]),v._v(" "),t("p",[v._v("相对单位，em的大小并不是固定的，一般情况下会继承父元素文字大小，相对于当前对象内文本的字体尺寸。如当前对行内文本的字体尺寸未被人为设置，则相对于浏览器的默认字体16px尺寸。")]),v._v(" "),t("h3",{attrs:{id:"rem"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rem"}},[v._v("#")]),v._v(" rem")]),v._v(" "),t("p",[v._v("rem是CSS3新增的一个相对单位，与em的区别在于元素设定字体大小时，仍然是相对大小，但相对的只是HTML根元素。")]),v._v(" "),t("h3",{attrs:{id:"vh-vw"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vh-vw"}},[v._v("#")]),v._v(" vh&vw")]),v._v(" "),t("p",[v._v("都作为视口单位，vh代表的是view height，也就是显示器可视范围高度的百分比；vw表示的是view width，也就是显示器可是范围宽度的百分比， 1vw = 1% * 视口宽度 。也就是说，一个显示器视口就是 100vw")]),v._v(" "),t("h2",{attrs:{id:"vw-px-rem之间的换算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vw-px-rem之间的换算"}},[v._v("#")]),v._v(" vw px rem之间的换算")]),v._v(" "),t("p",[v._v("以下面标准为例（受随着根元素字体大小、移动端屏幕大小影响，计算均是进行四舍五入的结果）：")]),v._v(" "),t("p",[v._v("移动端屏幕为"),t("code",[v._v("750px")])]),v._v(" "),t("p",[v._v("那么： "),t("code",[v._v("100vw = 750px")])]),v._v(" "),t("p",[v._v("所以"),t("code",[v._v("1vw")]),v._v("就等于："),t("code",[v._v("1vw =750px/100vw = 7.5px")])]),v._v(" "),t("p",[v._v("注意现在"),t("code",[v._v("1vw")]),v._v("等于 "),t("code",[v._v("7.5px")]),v._v("，而我们的"),t("code",[v._v("1rem")]),v._v("是"),t("code",[v._v("16px")]),v._v(" (默认情况下 根元素字体大小为"),t("code",[v._v("16")]),v._v("px)")]),v._v(" "),t("p",[v._v("现在进行计算："),t("code",[v._v("1rem = 16px/7.5px = 2.133vw")])]),v._v(" "),t("p",[v._v("相反："),t("code",[v._v("1vw = 7.5px/16px = 0.469rem")])]),v._v(" "),t("p",[v._v("上面的计算公式计算同样也可以逆向思考下：")]),v._v(" "),t("p",[v._v("同理，移动端屏幕大小为"),t("code",[v._v("750px")])]),v._v(" "),t("p",[v._v("我们计算"),t("code",[v._v("1px")]),v._v("等于多少"),t("code",[v._v("vw")]),v._v(": "),t("code",[v._v("1px = 100/750 = 0.1333vw")])]),v._v(" "),t("p",[v._v("显示"),t("code",[v._v("1px=0.1333vw")])]),v._v(" "),t("p",[v._v("现在进行计算："),t("code",[v._v("1rem= 0.1333 * 16 = 2.133vw")])]),v._v(" "),t("h2",{attrs:{id:"参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[v._v("#")]),v._v(" 参考资料")]),v._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/Qingquan-Li/blog/issues/58",target:"_blank",rel:"noopener noreferrer"}},[v._v("分辨率相关：屏幕尺寸、px、pt - 物理像素和逻辑像素"),t("OutboundLink")],1)]),v._v(" "),t("p",[t("a",{attrs:{href:"https://pjchender.blogspot.com/2015/04/css-3vh-vw.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("好用的css 3新单位vh vw"),t("OutboundLink")],1)]),v._v(" "),t("p",[t("a",{attrs:{href:"https://segmentfault.com/a/1190000016047555",target:"_blank",rel:"noopener noreferrer"}},[v._v("移动端的vw px rem之间换算"),t("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=r.exports}}]);